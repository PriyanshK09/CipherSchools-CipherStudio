const toPackageJSON = (name, dependencies = {}) =>
  JSON.stringify(
    {
      name,
      version: "0.0.1",
      private: true,
      main: "src/main.jsx",
      dependencies: {
        react: "^18.3.1",
        "react-dom": "^18.3.1",
        ...dependencies
      }
    },
    null,
    2
  );

const exampleProjects = [
  {
    id: "analytics-dashboard",
    name: "Analytics Dashboard",
    tagline: "Monitor team health and revenue at a glance.",
    description:
      "A responsive analytics dashboard with metric highlights, activity timeline, and top product performers. Ideal for demonstrating layout composition.",
    tags: ["Dashboard", "Insights", "Responsive"],
    files: {
      "/package.json": toPackageJSON("analytics-dashboard"),
      "/src/main.jsx": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.jsx';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n",
      "/src/index.css": "* {\n  box-sizing: border-box;\n}\n\n:root {\n  color-scheme: dark;\n  font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n  background: radial-gradient(circle at 20% 20%, rgba(56, 189, 248, 0.12), transparent 60%),\n    radial-gradient(circle at 80% 0%, rgba(79, 70, 229, 0.12), transparent 55%),\n    #020617;\n  color: #e2e8f0;\n}\n\nbody {\n  margin: 0;\n  min-height: 100vh;\n}\n\n#root {\n  min-height: 100vh;\n}\n\n.dashboard {\n  min-height: 100vh;\n  padding: 4rem clamp(2rem, 3vw, 4rem);\n  display: flex;\n  flex-direction: column;\n  gap: 2.5rem;\n}\n\n.dashboard__header {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 1rem;\n  justify-content: space-between;\n}\n\n.dashboard__header h1 {\n  font-size: clamp(2rem, 4vw, 2.75rem);\n  margin: 0;\n}\n\n.dashboard__breadcrumbs {\n  display: flex;\n  gap: 0.75rem;\n  font-size: 0.85rem;\n  color: #94a3b8;\n}\n\n.dashboard__breadcrumbs span:last-child {\n  color: #38bdf8;\n}\n\n.metric-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n  gap: 1.25rem;\n}\n\n.metric-card {\n  padding: 1.75rem;\n  border-radius: 1rem;\n  border: 1px solid rgba(148, 163, 184, 0.15);\n  background: linear-gradient(135deg, rgba(30, 41, 59, 0.9), rgba(15, 23, 42, 0.75));\n  display: grid;\n  gap: 0.75rem;\n}\n\n.metric-card__label {\n  font-size: 0.85rem;\n  letter-spacing: 0.15em;\n  text-transform: uppercase;\n  color: #94a3b8;\n}\n\n.metric-card__value {\n  font-size: 2rem;\n  font-weight: 700;\n}\n\n.metric-card__change {\n  font-size: 0.9rem;\n  display: inline-flex;\n  align-items: center;\n  gap: 0.4rem;\n  padding: 0.3rem 0.6rem;\n  border-radius: 999px;\n  background: rgba(56, 189, 248, 0.12);\n  color: #38bdf8;\n  width: fit-content;\n}\n\n.panels {\n  display: grid;\n  gap: 1.25rem;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n}\n\n.panel {\n  border-radius: 1rem;\n  border: 1px solid rgba(148, 163, 184, 0.15);\n  background: rgba(15, 23, 42, 0.75);\n  display: flex;\n  flex-direction: column;\n  min-height: 320px;\n}\n\n.panel__header {\n  padding: 1.5rem 1.5rem 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n}\n\n.panel__header h2 {\n  font-size: 1.25rem;\n  margin: 0;\n}\n\n.panel__header span {\n  font-size: 0.8rem;\n  color: #94a3b8;\n}\n\n.panel__content {\n  padding: 0 1.5rem 1.5rem;\n  flex: 1;\n  display: grid;\n  gap: 1rem;\n}\n\n.timeline-item {\n  display: grid;\n  gap: 0.25rem;\n  border-left: 2px solid rgba(148, 163, 184, 0.2);\n  padding-left: 1rem;\n  position: relative;\n}\n\n.timeline-item::before {\n  content: '';\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  border-radius: 999px;\n  background: #38bdf8;\n  left: -6px;\n  top: 6px;\n}\n\n.timeline-item__title {\n  font-weight: 600;\n}\n\n.timeline-item__meta {\n  font-size: 0.8rem;\n  color: #94a3b8;\n}\n\n.product-row {\n  display: grid;\n  grid-template-columns: 2fr 1fr 1fr;\n  align-items: center;\n  gap: 0.75rem;\n  padding: 0.75rem 1rem;\n  border-radius: 0.75rem;\n  background: rgba(30, 41, 59, 0.65);\n}\n\n.product-row__name {\n  font-weight: 600;\n}\n\n.product-row__growth {\n  font-size: 0.85rem;\n  color: #38bdf8;\n}\n\n.product-row__revenue {\n  font-size: 0.95rem;\n  justify-self: end;\n}\n",
      "/src/App.jsx": "const metrics = [\n  { label: 'Active Users', value: '8.2k', change: '+12.4%' },\n  { label: 'MRR', value: '$58.9k', change: '+6.1%' },\n  { label: 'Churn Rate', value: '2.1%', change: '-0.4%' },\n  { label: 'Net Promoter Score', value: '67', change: '+5' }\n];\n\nconst timeline = [\n  { title: 'New enterprise onboarding', meta: '45 mins ago · By Sophie' },\n  { title: 'Billing service deploy', meta: '2 hours ago · Automated' },\n  { title: 'Marketing experiment launched', meta: 'Yesterday · Growth Team' },\n  { title: 'Usage anomaly resolved', meta: 'Yesterday · SRE' }\n];\n\nconst products = [\n  { name: 'Pro Seat Licenses', growth: '+18.4%', revenue: '$34,210' },\n  { name: 'AI Insights Add-on', growth: '+11.2%', revenue: '$21,870' },\n  { name: 'Enterprise Support', growth: '+6.9%', revenue: '$17,640' },\n  { name: 'Workflow Automation', growth: '+4.8%', revenue: '$11,430' }\n];\n\nconst Breadcrumbs = () => (\n  <div className=\"dashboard__breadcrumbs\">\n    <span>Home</span>\n    <span>/</span>\n    <span>Analytics</span>\n    <span>/</span>\n    <span>Executive</span>\n  </div>\n);\n\nconst MetricCard = ({ label, value, change }) => (\n  <article className=\"metric-card\">\n    <span className=\"metric-card__label\">{label}</span>\n    <span className=\"metric-card__value\">{value}</span>\n    <span className=\"metric-card__change\">{change}</span>\n  </article>\n);\n\nconst ActivityTimeline = ({ items }) => (\n  <section className=\"panel\">\n    <header className=\"panel__header\">\n      <h2>Team Activity</h2>\n      <span>Last 24 hours</span>\n    </header>\n    <div className=\"panel__content\">\n      {items.map((item) => (\n        <div key={item.title} className=\"timeline-item\">\n          <span className=\"timeline-item__title\">{item.title}</span>\n          <span className=\"timeline-item__meta\">{item.meta}</span>\n        </div>\n      ))}\n    </div>\n  </section>\n);\n\nconst TopProducts = ({ items }) => (\n  <section className=\"panel\">\n    <header className=\"panel__header\">\n      <h2>Top Performers</h2>\n      <span>Revenue · 30d</span>\n    </header>\n    <div className=\"panel__content\">\n      {items.map((item) => (\n        <div key={item.name} className=\"product-row\">\n          <span className=\"product-row__name\">{item.name}</span>\n          <span className=\"product-row__growth\">{item.growth}</span>\n          <span className=\"product-row__revenue\">{item.revenue}</span>\n        </div>\n      ))}\n    </div>\n  </section>\n);\n\nexport default function App() {\n  return (\n    <div className=\"dashboard\">\n      <header className=\"dashboard__header\">\n        <div>\n          <Breadcrumbs />\n          <h1>Executive Overview</h1>\n        </div>\n        <div className=\"metric-card__change\" style={{ background: 'rgba(34,197,94,0.12)', color: '#4ade80' }}>\n          Live sync enabled\n        </div>\n      </header>\n\n      <section className=\"metric-grid\">\n        {metrics.map((metric) => (\n          <MetricCard key={metric.label} {...metric} />\n        ))}\n      </section>\n\n      <section className=\"panels\">\n        <ActivityTimeline items={timeline} />\n        <TopProducts items={products} />\n      </section>\n    </div>\n  );\n}\n"
    }
  },
  {
    id: "team-kanban",
    name: "Team Kanban Planner",
    tagline: "Organize work-in-progress across swimlanes.",
    description:
      "A lightweight Kanban planner with column swimlanes, focus mode, and drag-inspired task actions. Demonstrates interactive state management without external dependencies.",
    tags: ["Productivity", "State", "Components"],
    files: {
      "/package.json": toPackageJSON("team-kanban"),
      "/src/main.jsx": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.jsx';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n",
      "/src/index.css": "* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  min-height: 100vh;\n  font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n  background: linear-gradient(180deg, rgba(15, 23, 42, 0.95), rgba(15, 23, 42, 0.7)),\n    radial-gradient(circle at top left, rgba(79, 70, 229, 0.18), transparent 55%),\n    radial-gradient(circle at top right, rgba(14, 165, 233, 0.2), transparent 65%),\n    #030712;\n  color: #e2e8f0;\n}\n\n#root {\n  min-height: 100vh;\n  display: flex;\n}\n\n.app {\n  width: 100%;\n  padding: clamp(1.5rem, 3vw, 2.75rem);\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.app__header {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n\n.app__header h1 {\n  margin: 0;\n  font-size: clamp(2rem, 4vw, 2.75rem);\n}\n\n.app__meta {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.75rem;\n  align-items: center;\n  font-size: 0.9rem;\n  color: #cbd5f5;\n}\n\n.swimlanes {\n  display: grid;\n  gap: 1.25rem;\n  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));\n}\n\n.column {\n  border-radius: 1.25rem;\n  padding: 1.5rem;\n  background: rgba(15, 23, 42, 0.65);\n  border: 1px solid rgba(148, 163, 184, 0.12);\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  min-height: 320px;\n}\n\n.column__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 0.95rem;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: #94a3b8;\n}\n\n.column__badge {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 999px;\n  padding: 0.2rem 0.65rem;\n  background: rgba(56, 189, 248, 0.12);\n  color: #38bdf8;\n  font-weight: 600;\n  font-size: 0.8rem;\n}\n\n.task {\n  padding: 1rem;\n  border-radius: 1rem;\n  border: 1px solid rgba(148, 163, 184, 0.15);\n  background: rgba(30, 41, 59, 0.85);\n  display: grid;\n  gap: 0.5rem;\n  position: relative;\n}\n\n.task__title {\n  font-weight: 600;\n}\n\n.task__meta {\n  font-size: 0.8rem;\n  color: #94a3b8;\n  display: flex;\n  justify-content: space-between;\n}\n\n.task__actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.task__button {\n  border: none;\n  cursor: pointer;\n  padding: 0.35rem 0.65rem;\n  border-radius: 999px;\n  font-size: 0.75rem;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  color: inherit;\n  background: rgba(148, 163, 184, 0.18);\n  transition: background 0.2s ease;\n}\n\n.task__button:hover {\n  background: rgba(56, 189, 248, 0.25);\n}\n\n.new-task-card {\n  border-radius: 1.25rem;\n  border: 1px dashed rgba(148, 163, 184, 0.3);\n  background: rgba(15, 23, 42, 0.55);\n  padding: 1.5rem;\n  display: grid;\n  gap: 0.75rem;\n}\n\n.new-task-card form {\n  display: grid;\n  gap: 0.65rem;\n}\n\n.new-task-card textarea {\n  border-radius: 0.75rem;\n  border: 1px solid rgba(148, 163, 184, 0.35);\n  padding: 0.75rem;\n  min-height: 96px;\n  resize: vertical;\n  font-family: inherit;\n  background: rgba(15, 23, 42, 0.85);\n  color: inherit;\n}\n\n.new-task-card button {\n  align-self: start;\n  border-radius: 999px;\n  border: none;\n  background: linear-gradient(135deg, rgba(14, 165, 233, 0.9), rgba(79, 70, 229, 0.9));\n  color: #0f172a;\n  font-weight: 600;\n  font-size: 0.85rem;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  padding: 0.55rem 1.75rem;\n  cursor: pointer;\n  box-shadow: 0 10px 20px -15px rgba(14, 165, 233, 0.7);\n}\n\n@media (max-width: 720px) {\n  .task__meta {\n    flex-direction: column;\n    gap: 0.25rem;\n  }\n}\n",
      "/src/App.jsx": "import { useMemo, useState } from 'react';\n\nconst columnOrder = ['backlog', 'in_progress', 'review', 'complete'];\nconst columnLabels = {\n  backlog: 'Backlog',\n  in_progress: 'In Progress',\n  review: 'Review',\n  complete: 'Done'\n};\n\nconst starterBoard = {\n  backlog: [\n    { title: 'Voiceover script for feature tour', owner: 'Avery' },\n    { title: 'Research customer spotlight', owner: 'Devon' }\n  ],\n  in_progress: [\n    { title: 'Design billing settings panel', owner: 'River' },\n    { title: 'QA automation for usage limits', owner: 'Parker' }\n  ],\n  review: [\n    { title: 'Publish June changelog assets', owner: 'Morgan' }\n  ],\n  complete: [\n    { title: 'Launch live session templates', owner: 'Sage' },\n    { title: 'Refresh marketing attribution model', owner: 'Hayden' }\n  ]\n};\n\nconst moveOptions = {\n  backlog: ['in_progress'],\n  in_progress: ['review', 'backlog'],\n  review: ['complete', 'in_progress'],\n  complete: []\n};\n\nconst useBoardState = () => {\n  const [columns, setColumns] = useState(starterBoard);\n\n  const moveTask = (column, index, destination) => {\n    setColumns((current) => {\n      const next = structuredClone(current);\n      const [task] = next[column].splice(index, 1);\n      next[destination].unshift(task);\n      return next;\n    });\n  };\n\n  const addTask = (note) => {\n    if (!note.trim()) return;\n    setColumns((current) => ({\n      ...current,\n      backlog: [{ title: note.trim(), owner: 'You' }, ...current.backlog]\n    }));\n  };\n\n  return { columns, moveTask, addTask };\n};\n\nconst TaskCard = ({ task, index, column, onMove }) => {\n  const destinations = moveOptions[column];\n\n  return (\n    <article className=\"task\">\n      <span className=\"task__title\">{task.title}</span>\n      <div className=\"task__meta\">\n        <span>Owner · {task.owner}</span>\n        <span>{columnLabels[column]}</span>\n      </div>\n      {destinations.length > 0 && (\n        <div className=\"task__actions\">\n          {destinations.map((destination) => (\n            <button\n              key={destination}\n              className=\"task__button\"\n              onClick={() => onMove(column, index, destination)}\n            >\n              Move to {columnLabels[destination]}\n            </button>\n          ))}\n        </div>\n      )}\n    </article>\n  );\n};\n\nconst Column = ({ columnKey, tasks, onMove }) => (\n  <section className=\"column\">\n    <header className=\"column__header\">\n      {columnLabels[columnKey]}\n      <span className=\"column__badge\">{tasks.length}</span>\n    </header>\n    <div className=\"column__body\" style={{ display: 'grid', gap: '0.75rem' }}>\n      {tasks.map((task, index) => (\n        <TaskCard key={task.title} task={task} index={index} column={columnKey} onMove={onMove} />\n      ))}\n      {tasks.length === 0 && (\n        <div style={{ fontSize: '0.85rem', color: '#94a3b8' }}>Awaiting tasks…</div>\n      )}\n    </div>\n  </section>\n);\n\nconst NewTaskCard = ({ onAdd }) => {\n  const [note, setNote] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onAdd(note);\n    setNote('');\n  };\n\n  return (\n    <aside className=\"new-task-card\">\n      <h2 style={{ margin: 0, fontSize: '1.1rem' }}>Add to backlog</h2>\n      <p style={{ margin: 0, color: '#94a3b8', fontSize: '0.9rem' }}>Capture next sprint opportunities.</p>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={note}\n          onChange={(event) => setNote(event.target.value)}\n          placeholder=\"Describe the next task for your team…\"\n        />\n        <button type=\"submit\">Add Card</button>\n      </form>\n    </aside>\n  );\n};\n\nexport default function App() {\n  const { columns, moveTask, addTask } = useBoardState();\n  const totalWip = useMemo(() => columns.in_progress.length + columns.review.length, [columns]);\n\n  return (\n    <div className=\"app\">\n      <header className=\"app__header\">\n        <h1>Squad Velocity Planner</h1>\n        <div className=\"app__meta\">\n          <span>In-flight tasks · <strong>{totalWip}</strong></span>\n          <span>🎯 Focus mode keeps your team aligned.</span>\n        </div>\n      </header>\n\n      <section className=\"swimlanes\">\n        {columnOrder.map((columnKey) => (\n          <Column key={columnKey} columnKey={columnKey} tasks={columns[columnKey]} onMove={moveTask} />\n        ))}\n      </section>\n\n      <NewTaskCard onAdd={addTask} />\n    </div>\n  );\n}\n"
    }
  },
  {
    id: "markdown-journal",
    name: "Markdown Journal",
    tagline: "Draft notes with instant markdown preview.",
    description:
      "A split-pane markdown editor with live preview, keyboard shortcuts, and saved themes. Highlights two-pane layouts and derived state with memoization.",
    tags: ["Markdown", "Preview", "Hooks"],
    files: {
      "/package.json": toPackageJSON("markdown-journal", { marked: "^11.1.1" }),
      "/src/main.jsx": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.jsx';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n",
      "/src/index.css": "* {\n  box-sizing: border-box;\n}\n\nbody {\n  margin: 0;\n  min-height: 100vh;\n  font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n  background: linear-gradient(145deg, rgba(15, 23, 42, 0.95), rgba(15, 23, 42, 0.75)),\n    radial-gradient(circle at 20% 20%, rgba(56, 189, 248, 0.14), transparent 55%),\n    radial-gradient(circle at 80% 0%, rgba(236, 72, 153, 0.14), transparent 55%),\n    #020617;\n  color: #e2e8f0;\n}\n\n#root {\n  min-height: 100vh;\n}\n\n.journal {\n  min-height: 100vh;\n  padding: clamp(1.25rem, 3vw, 2.5rem);\n  display: grid;\n  gap: 2rem;\n}\n\n.journal__header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.journal__header h1 {\n  margin: 0;\n  font-size: clamp(2rem, 4vw, 2.75rem);\n}\n\n.journal__actions {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.75rem;\n  padding: 0.6rem 1rem;\n  border-radius: 999px;\n  background: rgba(56, 189, 248, 0.12);\n  color: #38bdf8;\n  font-size: 0.85rem;\n  letter-spacing: 0.12em;\n  text-transform: uppercase;\n}\n\n.split {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 1.5rem;\n}\n\n.panel {\n  border-radius: 1.5rem;\n  border: 1px solid rgba(148, 163, 184, 0.12);\n  background: rgba(15, 23, 42, 0.65);\n  backdrop-filter: blur(18px);\n  display: flex;\n  flex-direction: column;\n  min-height: 320px;\n}\n\n.panel__header {\n  padding: 1.2rem 1.5rem;\n  border-bottom: 1px solid rgba(148, 163, 184, 0.12);\n  font-size: 0.85rem;\n  letter-spacing: 0.14em;\n  text-transform: uppercase;\n  color: #94a3b8;\n}\n\n.panel__body {\n  flex: 1;\n  padding: 1.5rem;\n  overflow: auto;\n  line-height: 1.65;\n}\n\ntextarea {\n  width: 100%;\n  min-height: 100%;\n  border: none;\n  background: transparent;\n  resize: none;\n  color: inherit;\n  font-size: 0.95rem;\n  font-family: 'JetBrains Mono', 'Fira Code', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;\n}\n\ntextarea:focus {\n  outline: none;\n}\n\n.preview h1,\n.preview h2,\n.preview h3 {\n  margin-top: 1.5rem;\n  margin-bottom: 0.75rem;\n}\n\n.preview pre {\n  background: rgba(15, 23, 42, 0.9);\n  padding: 1rem;\n  border-radius: 1rem;\n  border: 1px solid rgba(148, 163, 184, 0.18);\n  overflow-x: auto;\n}\n\n.preview code {\n  font-family: 'JetBrains Mono', 'Fira Code', monospace;\n  background: rgba(148, 163, 184, 0.12);\n  padding: 0.15rem 0.4rem;\n  border-radius: 0.35rem;\n}\n\n.preview a {\n  color: #38bdf8;\n}\n\n.preview ul {\n  padding-left: 1.25rem;\n}\n\n.footer-note {\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.9rem;\n  color: #94a3b8;\n}\n",
      "/src/App.jsx": "import { useMemo, useState } from 'react';\nimport { marked } from 'marked';\n\nconst starterMarkdown = `# Morning reflections\\n\\nStart each sprint with gratitude, intention, and clarity.\\n\\n## Grateful for\\n- An energized crew ready to ship\\n- Customers who trust our roadmap\\n- Coupled UI + DX teams\\n\\n## Today's intention\\n**Protect focus.** Fewer pivots, more deep work.\\n\\n> A calm workspace nurtures brilliant releases.\\n\\n## Quick sketch\\n\\n\`\`\`js\\nconst celebrate = () => {\\n  setTimeout(() => console.log('Small wins matter 🍀'), 3000);\\n};\\n\\ncelebrate();\\n\`\`\`\\n\\nLearn more about our rituals at [CipherStudio](https://cipherstudio.dev).`;\n\nmarked.setOptions({ breaks: true, gfm: true });\n\nconst formatDate = (date) =>\n  new Intl.DateTimeFormat('en-US', { dateStyle: 'full', timeStyle: 'short' }).format(date);\n\nexport default function App() {\n  const [markdown, setMarkdown] = useState(starterMarkdown);\n  const [lastSaved, setLastSaved] = useState(() => new Date());\n\n  const rendered = useMemo(() => marked.parse(markdown), [markdown]);\n\n  const handleChange = (event) => {\n    setMarkdown(event.target.value);\n    setLastSaved(new Date());\n  };\n\n  return (\n    <div className=\"journal\">\n      <header className=\"journal__header\">\n        <div>\n          <h1>Creative Journal Studio</h1>\n          <div className=\"footer-note\">\n            Saved {formatDate(lastSaved)} · Cmd/Ctrl + Enter to publish draft\n          </div>\n        </div>\n        <div className=\"journal__actions\">Live Preview Enabled</div>\n      </header>\n\n      <section className=\"split\">\n        <article className=\"panel\">\n          <header className=\"panel__header\">Editor</header>\n          <div className=\"panel__body\">\n            <textarea value={markdown} onChange={handleChange} spellCheck=\"false\" />\n          </div>\n        </article>\n        <article className=\"panel\">\n          <header className=\"panel__header\">Preview</header>\n          <div className=\"panel__body preview\" dangerouslySetInnerHTML={{ __html: rendered }} />\n        </article>\n      </section>\n    </div>\n  );\n}\n"
    },
    dependencies: {
      marked: "^11.1.1"
    }
  }
];

export const getExampleProjectById = (id) => exampleProjects.find((project) => project.id === id);

export default exampleProjects;
